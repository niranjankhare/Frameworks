/*
 * This file is generated by jOOQ.
*/
package db.jooq.generated.automationDb;


import db.jooq.generated.automationDb.tables.Guimap;
import db.jooq.generated.automationDb.tables.Pages;
import db.jooq.generated.automationDb.tables.Properties;
import db.jooq.generated.automationDb.tables.records.GuimapRecord;
import db.jooq.generated.automationDb.tables.records.PagesRecord;
import db.jooq.generated.automationDb.tables.records.PropertiesRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>automation</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<GuimapRecord, Integer> IDENTITY_GUIMAP = Identities0.IDENTITY_GUIMAP;
    public static final Identity<PagesRecord, Integer> IDENTITY_PAGES = Identities0.IDENTITY_PAGES;
    public static final Identity<PropertiesRecord, Integer> IDENTITY_PROPERTIES = Identities0.IDENTITY_PROPERTIES;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<GuimapRecord> KEY_GUIMAP_PRIMARY = UniqueKeys0.KEY_GUIMAP_PRIMARY;
    public static final UniqueKey<PagesRecord> KEY_PAGES_PRIMARY = UniqueKeys0.KEY_PAGES_PRIMARY;
    public static final UniqueKey<PropertiesRecord> KEY_PROPERTIES_PRIMARY = UniqueKeys0.KEY_PROPERTIES_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<GuimapRecord, PagesRecord> FK_PAGE = ForeignKeys0.FK_PAGE;
    public static final ForeignKey<PropertiesRecord, GuimapRecord> FK_GUIMAP = ForeignKeys0.FK_GUIMAP;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<GuimapRecord, Integer> IDENTITY_GUIMAP = createIdentity(Guimap.GUIMAP, Guimap.GUIMAP.GUIMAPID);
        public static Identity<PagesRecord, Integer> IDENTITY_PAGES = createIdentity(Pages.PAGES, Pages.PAGES.PAGEID);
        public static Identity<PropertiesRecord, Integer> IDENTITY_PROPERTIES = createIdentity(Properties.PROPERTIES, Properties.PROPERTIES.PROPERTYID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<GuimapRecord> KEY_GUIMAP_PRIMARY = createUniqueKey(Guimap.GUIMAP, "KEY_GUIMAP_PRIMARY", Guimap.GUIMAP.GUIMAPID);
        public static final UniqueKey<PagesRecord> KEY_PAGES_PRIMARY = createUniqueKey(Pages.PAGES, "KEY_PAGES_PRIMARY", Pages.PAGES.PAGEID);
        public static final UniqueKey<PropertiesRecord> KEY_PROPERTIES_PRIMARY = createUniqueKey(Properties.PROPERTIES, "KEY_PROPERTIES_PRIMARY", Properties.PROPERTIES.PROPERTYID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<GuimapRecord, PagesRecord> FK_PAGE = createForeignKey(db.jooq.generated.automationDb.Keys.KEY_PAGES_PRIMARY, Guimap.GUIMAP, "fk_page", Guimap.GUIMAP.PAGEID);
        public static final ForeignKey<PropertiesRecord, GuimapRecord> FK_GUIMAP = createForeignKey(db.jooq.generated.automationDb.Keys.KEY_GUIMAP_PRIMARY, Properties.PROPERTIES, "fk_guimap", Properties.PROPERTIES.GUIMAPID);
    }
}
